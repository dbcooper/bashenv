#
# .bashrc - setup standard environment for each bash shell invocation
#
SHELL=/bin/bash; export SHELL                   # default shell is /bin/bash

# default EDITOR is vi
if [ -x /usr/bin/nvim ]
then
    EDITOR=/usr/bin/nvim
    alias vi='nvim'
elif [ -x /usr/bin/vim ]
then
    EDITOR=/usr/bin/vim
    alias vi='vim'
fi
export EDITOR

ulimit -c 0                                     # don't save core dumps

PATH=$PATH:/sbin:/usr/sbin:$HOME/bin

alias more=less                                 # less is more
alias ls='ls -FC --color=auto'                  # add options to ls(1)
alias cls='clear'

# Moar colors
if [ "$COLORTERM" = 'gnome-terminal' ]
then
    TERM='xterm-256color'
fi

# Handle "linux" (console) TERM: no powerline, simpler prompt, etc.
if [ "$TERM" = 'linux' ]
then
    SIMPLE_CONSOLE='y'
fi

# Stupid Ubuntu
if [ -x /usr/bin/ack-grep ]
then
    alias ack='ack-grep'
fi

# From https://fedoramagazine.org/add-power-terminal-powerline/
pd_exe=`which powerline-daemon 2>/dev/null`
if [[ "$pd_exe" && -f $pd_exe && -z "$SIMPLE_CONSOLE" && -z "$TMUX" ]]
then
    powerline-daemon -q
    POWERLINE_BASH_CONTINUATION=1
    POWERLINE_BASH_SELECT=1
    source ~/.powerline_bindings.sh
elif [ -h "$HOME/.git-completion.bash" -a -e "$HOME/.git-completion.bash" ]
then
    # Git on command-prompt stuff, shamelessly copied from James' .bashrc
    # (w/ slight modifications)
    source $HOME/.git-completion.bash
    [ -h $HOME/.git-prompt.sh ] && source $HOME/.git-prompt.sh
    GIT_PS1_SHOWDIRTYSTATE=1
    GIT_PS1_SHOWSTASHSTATE=1
    GIT_PS1_SHOWUPSTREAM="auto"

    #export PS1='[[\e[32m\]\u@\h \[\e[33m\]\W\[\e[34m\]$(__git_ps1 " (%s)")\[\e[0m\]]$ '
    #           [ {green}  \u@\h  {yellow} \W {blue}   git info             {normal}]$
    export PS1='\h:\w$(__git_ps1 " \[\e[33m\](%s)\[\e[0m\]")$ '
else
    # Neither powerline nor git-completion function available
    export PS1='\h:\w$ '
fi

# [Old] pharosdb variable, but might be utilized in places by pharos?
export PDBROOT=$HOME/git/pharos

# Alternate shell stuff
if [ "$INCONSOLATA" = 'true' ]
then
    export PS1='\h:\w$(__git_ps1 " \[\e[33m\](%s)\[\e[0m\]")\nâžœ  '
    alias gvim='gvim -U ~/.gvimrc-inconsolata'
fi

# From https://metacpan.org/dist/Catalyst-Manual/view/lib/Catalyst/Manual/Tutorial/07_Debugging.pod#DEBUGGING-MODULES-FROM-CPAN
alias pmver="perl -le '\$m = shift; eval qq(require \$m) or die qq(module \"\$m\" is not installed\\n); print \$m->VERSION'"

# su shortcut
alias ssu='sudo su -l'

# Running nvim inside tmux crashes tmux client, at least CentOS/RHEL
# E.g., https://github.com/tmux/tmux/issues/1264
IS_RHEL=`grep -P '^(?:CentOS|Red Hat Enterprise Linux)' /etc/redhat-release 2>/dev/null`
if [[ "$IS_RHEL" && "$TMUX" && `alias vi | grep -oe "'\(\w\+\)'$"` == "'nvim'" ]]
then
    alias vi='vim'
    export EDITOR=/usr/bin/vim
fi

# XXX  Tilix VTE (Virtual Terminal Emulator) configuration thing breaks [my] powerline, just set to run as login shell
# https://gnunn1.github.io/tilix-web/manual/vteconfig/

# Local machine-specific Bash environment setup--if any
if [[ -e "$HOME/.bashrc.local" ]]
then
    source $HOME/.bashrc.local
fi

# vim: sts=4 sw=4 et
